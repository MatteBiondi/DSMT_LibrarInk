% These parameters will be available at run-time for the specified application, use application:get_env/2 to retrieve
% the value
[
  {kernel, [
    {logger_level, info},
    {logger, [
      {handler, default, logger_std_h, #{
        level => notice,
        formatter => {logger_formatter, #{template => ["[",level,"]","[",time,"]","[",pid,"]","[",mfa,"]","\t",msg,
          "\n"], single_line => true, time_designator=>$\s}},
        filters => [{librarink_filter, {fun logger_filters:domain/2, {log, equal , [librarink]}}}]
      }},
      {handler, debug_handler, logger_std_h, #{
        level => info,
        config => #{file => "log/debug.log"},
        formatter => {logger_formatter, #{template => ["[",level,"]","[",time,"]","[",pid,"]","[",mfa,"]","\t",msg,
          "\n"], single_line => false, time_designator=>$\s}}
      }},
      {handler, error_handler, logger_std_h, #{
        level => error,
        config => #{file => "log/error.log"},
        formatter => {logger_formatter, #{template => ["[",level,"]","[",time,"]","[",pid,"]","[",mfa,"]","\t",msg,
          "\n"],  single_line => false, time_designator=>$\s}}
      }}
    ]},
    {distributed, [{librarink_mnesiaDB, 3000, ['mnesia_active2@172.18.0.32', 'mnesia_backup2@172.18.0.33']}]},
    {sync_nodes_mandatory, []},
    {sync_nodes_optional, ['mnesia_backup2@172.18.0.33']},
    {sync_nodes_timeout, 10000}

  ]},
  {mnesia, [{dir, "librarink_db_files"}]},
  {librarink_mnesiaDB, [{active_nodes,['mnesia_active2@172.18.0.32']}, {backup_nodes,['mnesia_backup2@172.18.0.33']}]}
].
